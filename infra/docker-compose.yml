services:
  django:
    image: temirovazat/notifications_admin:1.0.0
    volumes:
      - static_value:/opt/notifications_admin/static/
      - media_value:/opt/notifications_admin/media/
    env_file:
      - ./.env
    depends_on:
      - fastapi
      - postgres
      - redis

  celery:
    image: temirovazat/notifications_admin:1.0.0
    entrypoint: >
      sh -c "celery -A core worker --beat --loglevel=info"
    env_file:
      - ./.env
    depends_on:
      - django

  fastapi:
    image: temirovazat/notifications_api:1.0.0
    env_file:
      - ./.env
    depends_on:
      - kafka
  
  faust:
    image: temirovazat/notifications_worker:1.0.0
    env_file:
      - ./.env
    depends_on:
      - django
      - fastapi
      - kafka

  postgres:
    image: postgres:14.5-alpine
    expose:
      - 5432
    env_file:
      - ./.env

  redis:
    image: redis:7.0.5
    expose:
      - 6379

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    expose:
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  zookeeper:
    image: zookeeper:3.8

  nginx:
    image: nginx:1.23.2
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/www/static/
      - media_value:/var/www/media/
    depends_on:
      - fastapi
      - django

volumes:
  static_value:
  media_value:
